{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","id","name","App","useState","goods","setGoods","sortType","setSortType","className","type","Alphabetical","onClick","sortedGoods","sort","a","b","localeCompare","Length","length","Reverse","reversedGoods","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAIKA,E,oEAAAA,K,4BAAAA,E,gBAAAA,E,mBAAAA,M,KAWL,IAAMC,EAA2B,CAC/B,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,GAAIC,KAAM,WAGLC,EAAgB,WAC3B,MAA0BC,mBAAkBJ,GAA5C,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAA0B,MAA1D,mBAAOG,EAAP,KAAiBC,EAAjB,KA6BA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBF,IAAaR,EAASY,aAAe,GAAK,YACvEC,QAjCyB,WAC/B,IAAMC,EAAc,YAAIR,GAAOS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEb,KAAKe,cAAcD,EAAEd,SAErEI,EAASO,GACTL,EAAYT,EAASY,eA0BjB,iCAQA,wBACED,KAAK,SACLD,UAAS,4BAAuBF,IAAaR,EAASmB,OAAS,GAAK,YACpEN,QAlCmB,WACzB,IAAMC,EAAc,YAAIR,GAAOS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEb,KAAKiB,OACjDH,EAAEd,KAAKiB,UAEXb,EAASO,GACTL,EAAYT,EAASmB,SA0BjB,4BAQA,wBACER,KAAK,SACLD,UAAS,4BAAuBF,IAAaR,EAASqB,QAAU,GAAK,YACrER,QAlCc,WACpB,IAAMS,EAAgB,YAAIhB,GAAOiB,UAEjChB,EAASe,GACTb,EAAYT,EAASqB,UA2BjB,qBAQCb,GACC,wBACEG,KAAK,SACLD,UAAS,2BAAmC,OAAbF,EAAoB,GAAK,YACxDK,QApCU,WAClBN,EAASN,GACTQ,EAAY,OA+BN,sBAUJ,6BACGH,EAAMkB,KAAI,SAACC,GAAD,OACT,oBAAkB,UAAQ,OAA1B,SACGA,EAAKtB,MADCsB,EAAKvB,aChGxBwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a0f6edba.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum SortType {\n  Alphabetical = 'alphabetical',\n  Length = 'length',\n  Reverse = 'reverse',\n}\n\ninterface Goods {\n  id: number;\n  name: string;\n}\n\nconst goodsFromServer: Goods[] = [\n  { id: 1, name: 'Dumplings' },\n  { id: 2, name: 'Carrot' },\n  { id: 3, name: 'Eggs' },\n  { id: 4, name: 'Ice cream' },\n  { id: 5, name: 'Apple' },\n  { id: 6, name: 'Bread' },\n  { id: 7, name: 'Fish' },\n  { id: 8, name: 'Honey' },\n  { id: 9, name: 'Jam' },\n  { id: 10, name: 'Garlic' },\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Goods[]>(goodsFromServer);\n  const [sortType, setSortType] = useState<SortType | null>(null);\n\n  const handleSortAlphabetically = () => {\n    const sortedGoods = [...goods].sort((a, b) => a.name.localeCompare(b.name));\n\n    setGoods(sortedGoods);\n    setSortType(SortType.Alphabetical);\n  };\n\n  const handleSortByLength = () => {\n    const sortedGoods = [...goods].sort((a, b) => a.name.length\n      - b.name.length);\n\n    setGoods(sortedGoods);\n    setSortType(SortType.Length);\n  };\n\n  const handleReverse = () => {\n    const reversedGoods = [...goods].reverse();\n\n    setGoods(reversedGoods);\n    setSortType(SortType.Reverse);\n  };\n\n  const handleReset = () => {\n    setGoods(goodsFromServer);\n    setSortType(null);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.Alphabetical ? '' : 'is-light'}`}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortType.Length ? '' : 'is-light'}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${sortType === SortType.Reverse ? '' : 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {sortType && (\n          <button\n            type=\"button\"\n            className={`button is-danger ${sortType === null ? '' : 'is-light'}`}\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li key={good.id} data-cy=\"Good\">\n            {good.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}