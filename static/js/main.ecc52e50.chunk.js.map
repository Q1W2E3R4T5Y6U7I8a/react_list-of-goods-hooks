{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","goods","setGoods","activeButton","setActiveButton","resetVisible","setResetVisible","className","type","Alphabetical","onClick","sortedGoods","sort","Length","a","b","length","Reverse","reversedGoods","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAIKA,E,oEAAAA,K,4BAAAA,E,gBAAAA,E,mBAAAA,M,KAME,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAA0B,MAAlE,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAgCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBJ,IAAiBN,EAASY,aAAe,GAAK,YAC3EC,QApCyB,WAC/B,IAAMC,EAAc,YAAIV,GAAOW,OAE/BV,EAASS,GACTP,EAAgBP,EAASY,cACzBH,GAAgB,IA4BZ,iCAQA,wBACEE,KAAK,SACLD,UAAS,4BAAuBJ,IAAiBN,EAASgB,OAAS,GAAK,YACxEH,QApCmB,WACzB,IAAMC,EAAc,YAAIV,GAAOW,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAE3Dd,EAASS,GACTP,EAAgBP,EAASgB,QACzBP,GAAgB,IA4BZ,4BAQA,wBACEE,KAAK,SACLD,UAAS,4BAAuBJ,IAAiBN,EAASoB,QAAU,GAAK,YACzEP,QApCc,WACpB,IAAMQ,EAAgB,YAAIjB,GAAOkB,UAEjCjB,EAASgB,GACTd,EAAgBP,EAASoB,SACzBX,GAAgB,IA4BZ,qBAQCD,GACC,wBACEG,KAAK,SACLD,UAAS,2BAAuC,OAAjBJ,EAAwB,GAAK,YAC5DO,QArCU,WAClBR,EAAS,GAAD,OAAKJ,IACbM,EAAgB,MAChBE,GAAgB,IA+BV,sBAUJ,6BACGL,EAAMmB,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC/FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecc52e50.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum SortType {\n  Alphabetical = 'alphabetical',\n  Length = 'length',\n  Reverse = 'reverse',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [activeButton, setActiveButton] = useState<SortType | null>(null);\n  const [resetVisible, setResetVisible] = useState(false);\n\n  const handleSortAlphabetically = () => {\n    const sortedGoods = [...goods].sort();\n\n    setGoods(sortedGoods);\n    setActiveButton(SortType.Alphabetical);\n    setResetVisible(true);\n  };\n\n  const handleSortByLength = () => {\n    const sortedGoods = [...goods].sort((a, b) => a.length - b.length);\n\n    setGoods(sortedGoods);\n    setActiveButton(SortType.Length);\n    setResetVisible(true);\n  };\n\n  const handleReverse = () => {\n    const reversedGoods = [...goods].reverse();\n\n    setGoods(reversedGoods);\n    setActiveButton(SortType.Reverse);\n    setResetVisible(true);\n  };\n\n  const handleReset = () => {\n    setGoods([...goodsFromServer]);\n    setActiveButton(null);\n    setResetVisible(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${activeButton === SortType.Alphabetical ? '' : 'is-light'}`}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${activeButton === SortType.Length ? '' : 'is-light'}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${activeButton === SortType.Reverse ? '' : 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {resetVisible && (\n          <button\n            type=\"button\"\n            className={`button is-danger ${activeButton === null ? '' : 'is-light'}`}\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}